#!/bin/bash
set -o nounset -o errexit -o pipefail

# usage: check-package-dependencies <path-to-package-json-file>
if [ "$#" -ne 1 ]; then
    >&2 echo "usage: $0 <path-to-package-json-file>"
    exit 1
fi

PACKAGE_JSON_PATH=$1

if [ ! -e "${PACKAGE_JSON_PATH}" ]; then
    >&2 echo "error: '${PACKAGE_JSON_PATH}' not found"
    exit 1
fi 

# For stable versions of our packages, we run some additional checks to enforce
# policy before we publish
if [[ $(jq -r .version < "${PACKAGE_JSON_PATH}") != *-* ]]; then
    
    # We don't want to have stable packages depend on unstable packages, so if any dependency
    # looks like a pre-release or is using the "dev" tag, block it.
    if jq -e '.dependencies | to_entries | map(.value | test("-") or test("dev")) | any' < "${PACKAGE_JSON_PATH}" >/dev/null; then
        >&2 echo "error: one or more dependencies is a pre-release version or dev tag"
        exit 1
    fi
fi

exit 0
